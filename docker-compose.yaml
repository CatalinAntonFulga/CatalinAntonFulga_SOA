version: '3.8'

services:
  userapp:
    image: 'user_microservice:latest'
    build:
      context: ./user_microservice
    container_name: userapp
    ports:
      - "8080:8080"
    depends_on:
      - userdb
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://userdb:5432/users_cata
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
          
  userdb:
    image: 'postgres:13.1-alpine'
    container_name: userdb
    ports:
      - "5433:5432"
    volumes:
      - pgdata1:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=users_cata
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata

  appointmentsapp:
    image: 'appointments_microservice:latest'
    build:
      context: ./appointments_microservice
    container_name: appointmentsapp
    ports:
      - "8081:8081"
    depends_on:
      - appointmentsdb
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://appointmentsdb:5432/appointments_cata
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      
  appointmentsdb:
    image: 'postgres:13.1-alpine'
    container_name: appointmentsdb
    ports:
      - "5434:5432"
    volumes:
      - pgdata2:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=appointments_cata
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata2
    restart: always

  frontend:
    container_name: react_front
    image: 'react_frontend:latest'
    build:
      context: ./medical_appointments_frontend
      dockerfile: Dockerfile
    volumes:
      - ./medical_appointments_frontend/src:/app/src
    ports:
      - 3000:3000
    depends_on:
      - userapp
      - appointmentsapp

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
    depends_on:
      - userapp
      - appointmentsapp

volumes:
  pgdata1:
  pgdata2: